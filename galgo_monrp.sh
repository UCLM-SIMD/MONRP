#!/bin/bash
# execute galgo.sh from project directory
# project directory files: galgo.sh, execute.sh, galgo/configurations.py, configs.txt (autogenerated)
source ../newvenv/bin/activate

# read execution mode
if [[ "$1" == "metrics" ]];
then
   #DRIVER="executer_driver.py"
   PRINT_MODE='(m)'
   MODE='metrics'
elif [[ "$1" == "paretos" ]];
then
   #DRIVER="executer_driver_pareto.py"
   PRINT_MODE='(p)'
   MODE='paretos'
else
   echo "[ERROR]: Allowed modes: metrics, paretos."
   echo "Example: sh galgo_monrp.sh metrics genetic"
   exit 1
fi

DRIVER="executer_driver_algorithms.py"

# write config and execution files to read
FILE="configs_${2}.txt"

if [ "$2" = 'genetic' ] 
then
   python $PWD/galgo/genetic/configurations_genetic.py
elif [ "$2" = 'grasp' ] 
then
   python $PWD/galgo/grasp/configurations_grasp.py
elif [ "$2" = 'umda' ] 
then
   python $PWD/galgo/eda/umda/configurations_umda.py
elif [ "$2" = 'pbil' ] 
then
   python $PWD/galgo/eda/pbil/configurations_pbil.py
elif [ "$2" = 'mimic' ] 
then
   python $PWD/galgo/eda/mimic/configurations_mimic.py
elif [ "$2" = 'feda' ] 
then
   python $PWD/galgo/eda/feda/configurations_feda.py
else
   echo "[ERROR]: Allowed algorithms: genetic, grasp, umda, pbil, mimic, feda."
   echo "Example: sh galgo_monrp.sh metrics genetic"
   exit 1
fi

# write job name
NAME="monrp${2}${PRINT_MODE}"

# create one job array per config
CONFIGURATIONS=()
while IFS= read -r line; do
   CONFIGURATIONS+=("$line")
done <$PWD/"$FILE"

JOBS=${#CONFIGURATIONS[@]}
echo "=========================================================================================="
echo "Executing mode: ${1^^} for algorithm: ${2^^}"
echo "Reading algorithm configuration from: $PWD/$FILE"
echo "Job array name: $NAME"
echo "Jobs created: $JOBS"
echo "Job array ID:"
echo "=========================================================================================="
qsub -J 1-"$JOBS" \
   -N "$NAME" \
   -e "$PWD"/errors/ \
   -o "$PWD"/outputs/ \
   -v FILE="$PWD"/"$DRIVER",CWD="$PWD",CONFIG_FILE="$FILE",MODE="$MODE" "$PWD"/execute.sh
